#+TITLE: Guile ChangeFlow - ITIL 4 Change Management System
#+STARTUP: overview

* Overview

An ITIL 4 compliant change management system built in GNU Guile 3.0+ with MCP (Model Context Protocol) server capabilities.

* Quick Start

** Test the Live Demo
#+BEGIN_SRC bash
# Check if it's alive
curl https://api.changeflow.us/

# Run comprehensive tests
./scripts/test-endpoints.sh
#+END_SRC

** Run Locally (Guile)
#+BEGIN_SRC bash
# Test Guile modules
export GUILE_LOAD_PATH="$PWD/src:$GUILE_LOAD_PATH"
guile3 -s test/module-test-simple.scm

# Start MCP server (when implemented)
guile3 -c "(use-modules (mcp server)) (start-mcp-server 8080)"
#+END_SRC

** Deploy to Cloudflare Workers
#+BEGIN_SRC bash
cd infra/cloudflare
wrangler dev          # Test locally
wrangler publish      # Deploy to production
#+END_SRC

* Architecture

** Core Components
- *Models:* Change requests, approvals, audit trails
- *Risk Engine:* Automated risk assessment and freeze periods
- *MCP Server:* JSON-RPC 2.0 protocol for AI agent integration
- *Web Interface:* Executive dashboard and metrics
- *Integrations:* GitHub webhooks, notifications, external systems

** Technology Stack
- *Backend:* GNU Guile 3.0+ (Scheme/Lisp)
- *Frontend:* Cloudflare Workers (JavaScript)
- *Protocol:* MCP (Model Context Protocol) by Anthropic
- *Standards:* ITIL 4, JSON-RPC 2.0, SSE

* Features

** ITIL 4 Compliance
- Standard, Normal, and Emergency change workflows
- Change Advisory Board (CAB) approval processes
- Risk assessment with automated scoring
- Freeze period enforcement
- Complete audit trails

** MCP Integration
- 8 ITIL tools available via JSON-RPC
- Real-time notifications via Server-Sent Events
- OAuth 2.0 authentication with PKCE
- Tool discovery and capability negotiation

** Executive Dashboard
- Real-time change metrics
- ROI tracking and projections
- Risk heat maps
- Compliance reporting

* Documentation

See `docs/` for comprehensive documentation:
- `docs/architecture/` - System design and technical specs
- `docs/api/` - MCP protocol and API reference
- `docs/presentations/` - Executive presentations and demos

* Development

** Requirements
- GNU Guile 3.0+
- Node.js (for Cloudflare Workers)
- Wrangler CLI

** Testing
#+BEGIN_SRC bash
# Test all Guile modules
guile3 -s test/module-test-simple.scm

# Test endpoints
./scripts/test-endpoints.sh

# Run integration tests
make test
#+END_SRC

** Contributing
1. Check current issues and agent assignments
2. Follow conventional commits
3. Test with both Guile and Cloudflare environments
4. Update documentation as needed

* License

MIT License - See LICENSE file for details.