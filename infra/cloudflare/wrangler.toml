# Wrangler Configuration for Guile ChangeFlow
# Production-Grade Cloudflare Worker Deployment

name = "guile-changeflow-prod"
main = "worker.js"
compatibility_date = "2024-09-13"
compatibility_flags = ["nodejs_compat"]

# Environment Configuration
[env.production]
name = "guile-changeflow-prod"
route = "https://changeflow.enterprise.com/*"
zone_name = "enterprise.com"

[env.staging]
name = "guile-changeflow-staging"
route = "https://staging-changeflow.enterprise.com/*"

[env.development]
name = "guile-changeflow-dev"

# Variables for all environments
[vars]
WORKER_VERSION = "1.0.0"
MCP_PROTOCOL_VERSION = "2024-11-05"
ENVIRONMENT = "production"
LOG_LEVEL = "info"

# Production Variables
[env.production.vars]
DATABASE_URL = "sqlite:///data/changeflow-prod.db"
CORS_ORIGINS = "https://changeflow.enterprise.com,https://admin.changeflow.com"
RATE_LIMIT_PER_MINUTE = "1000"

# Staging Variables
[env.staging.vars]
DATABASE_URL = "sqlite:///data/changeflow-staging.db"
CORS_ORIGINS = "https://staging-changeflow.enterprise.com"
RATE_LIMIT_PER_MINUTE = "500"

# Development Variables
[env.development.vars]
DATABASE_URL = "sqlite:///data/changeflow-dev.db"
CORS_ORIGINS = "*"
RATE_LIMIT_PER_MINUTE = "100"

# KV Namespaces for caching and state
[[kv_namespaces]]
binding = "CHANGE_CACHE"
id = "change-cache-prod"
preview_id = "change-cache-preview"

[[kv_namespaces]]
binding = "METRICS_STORE"
id = "metrics-store-prod"
preview_id = "metrics-store-preview"

# Durable Objects for consistent state
[[durable_objects.bindings]]
name = "CHANGE_STATE"
class_name = "ChangeStateManager"

[[durable_objects.bindings]]
name = "APPROVAL_WORKFLOW"
class_name = "ApprovalWorkflowManager"

# Analytics Engine for metrics
[[analytics_engine_datasets]]
binding = "CHANGE_METRICS"

# Queue bindings for async processing
[[queues.producers]]
binding = "NOTIFICATION_QUEUE"
queue = "change-notifications"

[[queues.producers]]
binding = "AUDIT_QUEUE"
queue = "audit-events"

# R2 Buckets for file storage
[[r2_buckets]]
binding = "CHANGE_DOCUMENTS"
bucket_name = "guile-changeflow-documents"

[[r2_buckets]]
binding = "BACKUP_STORE"
bucket_name = "guile-changeflow-backups"

# D1 Database bindings
[[d1_databases]]
binding = "CHANGEFLOW_DB"
database_name = "guile-changeflow-prod"
database_id = "your-d1-database-id"

# Service bindings
[[services]]
binding = "NOTIFICATION_SERVICE"
service = "guile-changeflow-notifications"

[[services]]
binding = "RISK_ENGINE"
service = "guile-changeflow-risk-engine"

# Resource limits
[limits]
cpu_ms = 30000

# Build configuration
[build]
command = "echo 'No build step required for production worker'"

# Triggers and CRON jobs
[[triggers]]
crons = ["0 */5 * * * *"]  # Every 5 minutes for metrics collection

[[triggers]]
crons = ["0 0 * * * *"]    # Daily compliance report generation

[[triggers]]
crons = ["0 */1 * * * *"]  # Every minute for health checks

# Custom domains
[[route]]
pattern = "changeflow.enterprise.com/*"
zone_name = "enterprise.com"

[[route]]
pattern = "api.changeflow.enterprise.com/*"
zone_name = "enterprise.com"

# Observability Configuration
[observability]
enabled = true

# Workers Logs Configuration
[observability.logs]
enabled = true
sampling_rate = 1.0    # 100% sampling for comprehensive logging
retention = 30         # 30 days retention for compliance

# Workers Metrics Configuration
[observability.metrics]
enabled = true

# Workers Traces Configuration
[observability.traces]
enabled = true

# Logpush Configuration
[logpush]
# Send logs to multiple destinations for redundancy
destinations = [
  "splunk",      # For SOC monitoring
  "datadog",     # For APM and dashboards
  "s3"           # For long-term retention and compliance
]

# Log fields to include
fields = [
  "timestamp",
  "request_id",
  "method",
  "url",
  "status",
  "response_size",
  "duration",
  "user_agent",
  "cf_ray",
  "cf_country",
  "cf_data_center",
  "client_ip",
  "request_headers",
  "response_headers",
  "console_messages",  # Critical for structured logging
  "exceptions",
  "cpu_time",
  "wall_time"
]

# Security headers
[env.production.define]
SECURITY_HEADERS = '''
{
  "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
  "Content-Security-Policy": "default-src 'self'; script-src 'self' 'unsafe-inline'",
  "X-Frame-Options": "DENY",
  "X-Content-Type-Options": "nosniff",
  "Referrer-Policy": "strict-origin-when-cross-origin"
}
'''