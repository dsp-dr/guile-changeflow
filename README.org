#+TITLE: ChangeFlow - ITIL 4 Change Management System
#+STARTUP: overview

[[https://github.com/dsp-dr/guile-changeflow/actions/workflows/ci.yml][https://github.com/dsp-dr/guile-changeflow/actions/workflows/ci.yml/badge.svg]]
[[https://github.com/dsp-dr/guile-changeflow/releases][https://img.shields.io/github/v/release/dsp-dr/guile-changeflow.svg?include_prereleases]]
[[https://api.changeflow.us][https://img.shields.io/badge/deployed-Cloudflare%20Workers-orange.svg]]
[[LICENSE][https://img.shields.io/badge/license-MIT-blue.svg]]

* Overview

ChangeFlow is a comprehensive ITIL 4 compliant change management system designed for enterprise IT operations. It provides automated risk assessment, approval workflows, and AI-powered change tracking through the Model Context Protocol (MCP).

* Key Features

** ITIL 4 Compliance
- Full change lifecycle management (RFC to implementation)
- CAB (Change Advisory Board) approval workflows
- Risk assessment and impact analysis
- Emergency change procedures
- Standard change catalog
- Audit trail and compliance reporting

** Automated Risk Assessment
- Real-time risk scoring based on change attributes
- Freeze period enforcement
- Dependency tracking
- Rollback planning
- Impact analysis on affected systems

** MCP Integration
The system exposes 8 ITIL-compliant tools via JSON-RPC 2.0:
- =create_change_request= - Submit new RFCs
- =approve_change= - CAB approval processing
- =assess_risk= - Automated risk scoring
- =schedule_change= - Calendar management
- =update_status= - State transitions
- =get_change_details= - Query change information
- =list_pending_changes= - Dashboard views
- =emergency_override= - Break-glass procedures

* Quick Start

** Production API
#+BEGIN_SRC bash
# Check system status
curl https://api.changeflow.us/

# List available MCP tools
curl -X POST https://api.changeflow.us/ \
  -H "Content-Type: application/json" \
  -d '{"jsonrpc":"2.0","method":"tools/list","id":1}'
#+END_SRC

** Local Development
#+BEGIN_SRC bash
# Clone repository
git clone https://github.com/dsp-dr/guile-changeflow.git
cd guile-changeflow

# Start MCP server (auto-starts on port 8427 with direnv)
node scripts/mcp-local-server.js

# Run test suite
node test/mcp-comprehensive-test.js
#+END_SRC

** Deploy Your Own Instance
#+BEGIN_SRC bash
# Configure Cloudflare credentials
cp .env.example .env
# Edit .env with your CLOUDFLARE_API_TOKEN and CLOUDFLARE_ACCOUNT_ID

# Deploy to Cloudflare Workers
cd infra/cloudflare
wrangler publish
#+END_SRC

* Usage Examples

** Creating a Change Request
#+BEGIN_SRC json
{
  "jsonrpc": "2.0",
  "method": "create_change_request",
  "params": {
    "title": "Database Schema Update",
    "description": "Add authentication fields to user table",
    "category": "normal",
    "priority": "medium",
    "impact": "medium",
    "risk_score": 45,
    "scheduled_start": "2025-09-20T10:00:00Z",
    "scheduled_end": "2025-09-20T12:00:00Z"
  },
  "id": 1
}
#+END_SRC

** Assessing Risk
#+BEGIN_SRC json
{
  "jsonrpc": "2.0",
  "method": "assess_risk",
  "params": {
    "change_id": "CHG-20250914-0001",
    "factors": ["production", "database", "authentication"]
  },
  "id": 2
}
#+END_SRC

* System Architecture

** Components
- *Web Dashboard*: Executive view with real-time metrics
- *MCP Server*: AI agent integration layer
- *Risk Engine*: Automated assessment and scoring
- *State Machine*: ITIL-compliant workflow engine
- *Database*: SQLite with full audit trails

** State Workflow
#+BEGIN_SRC
submitted → assessing → approved → implementing → completed
                     ↘ rejected     ↓            ↗
                     ↘ needs-info   → failed ───
                     ↘ cancelled
#+END_SRC

* Risk Assessment Model

** Change Types (ITIL 4)

| Type      | Risk Threshold | Approval  | Use Case        |
|-----------+----------------+-----------+-----------------|
| Standard  | < 30           | Automatic | Routine updates |
| Normal    | 30-70          | Required  | Most changes    |
| Emergency | > 70           | Expedited | Critical fixes  |

** Risk Factors

| Factor                  | Weight | Description                           |
|-------------------------+--------+---------------------------------------|
| Production impact       |     30 | Changes affecting production systems  |
| Data modifications      |     25 | Database schema or data changes      |
| Security implications   |     20 | Authentication, authorization changes |
| Multi-system changes    |     15 | Cross-system dependencies             |
| Historical success rate |     10 | Past performance of similar changes  |

* Development Setup

** Prerequisites
- GNU Guile 3.0+ (for local development)
- Node.js 18+ (for MCP server)
- Cloudflare Workers account (for deployment)
- Make (for build automation)

** Quick Start
#+BEGIN_SRC bash
# Clone and setup
git clone https://github.com/dsp-dr/guile-changeflow.git
cd guile-changeflow

# Environment setup (automatic with direnv)
cp .env.example .env
direnv allow

# Run tests
make test

# Start local MCP server
make mcp-server

# Deploy to Cloudflare
make deploy
#+END_SRC

* Project Documentation

** Core Documents

| Document          | Purpose                                 | Location                      |
|-------------------+-----------------------------------------+-------------------------------|
| Setup & Build     | Build system and tooling configuration | [[file:docs/setup.org][docs/setup.org]]                |
| System Design     | Architecture and data models           | [[file:docs/architecture/][docs/architecture/]]            |
| ITIL Requirements | ITIL 4 mapping and compliance          | [[file:docs/itil-requirements.org][docs/itil-requirements.org]]    |
| MCP Protocol      | Protocol implementation guide          | [[file:docs/mcp-protocol.org][docs/mcp-protocol.org]]         |
| Deployment        | Infrastructure and scaling strategy    | [[file:docs/deployment.org][docs/deployment.org]]           |
| Roadmap v2.0      | Future development plans               | [[file:docs/roadmap/V2.0-ROADMAP.org][docs/roadmap/V2.0-ROADMAP.org]] |

** Testing

*** Test Coverage Areas
- Unit tests: Models and state machine
- Integration tests: MCP protocol
- System tests: End-to-end workflows
- Performance tests: Bulk operations

*** Running Tests
#+BEGIN_SRC bash
# All tests
make test

# Specific test suites
guile test/test-core-models.scm
node test/mcp-comprehensive-test.js
./scripts/test-endpoints.sh
#+END_SRC

* Deployment

** Environments
| Environment | URL                                          | Purpose     |
|-------------+----------------------------------------------+-------------|
| Production  | https://api.changeflow.us                   | Live system |
| Staging     | https://changeflow-mcp.dsp-dr.workers.dev   | Testing env |
| Local       | http://localhost:8427                        | Development |

** CI/CD Pipeline
- GitHub Actions for testing
- Automatic deployment on main branch
- Release tagging and versioning

* Contributing

See [[file:CONTRIBUTING.org][CONTRIBUTING.org]] for:
- Code style guidelines
- Commit message format
- Pull request process
- Testing requirements

* License

MIT License - See [[file:LICENSE][LICENSE]] for details

* Support

- Issues: [[https://github.com/dsp-dr/guile-changeflow/issues][GitHub Issues]]
- Documentation: [[file:docs/][docs/ directory]]
- API Reference: [[https://api.changeflow.us/docs][Online Documentation]]