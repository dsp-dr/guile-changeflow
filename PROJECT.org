#+TITLE: ChangeFlow Project Documentation Index
#+STARTUP: overview

* Project Documentation

** Core Documents

| Document                | Purpose                                  | Status   | Location                          |
|-------------------------+------------------------------------------+----------+-----------------------------------|
| Setup & Build           | Build system and tooling configuration  | Complete | [[file:docs/setup.org][docs/setup.org]]                    |
| System Design           | Architecture and data models            | Complete | [[file:docs/architecture/][docs/architecture/]]                |
| ITIL Requirements       | ITIL 4 mapping and compliance           | Complete | [[file:docs/itil-requirements.org][docs/itil-requirements.org]]        |
| MCP Protocol            | Protocol implementation guide           | Complete | [[file:docs/mcp-protocol.org][docs/mcp-protocol.org]]             |
| Deployment              | Infrastructure and scaling strategy     | Complete | [[file:docs/deployment.org][docs/deployment.org]]               |
| Research                | Competing methodologies and analysis    | Complete | [[file:docs/research.org][docs/research.org]]                 |

** Sprint & Development

| Document           | Purpose                      | Status | Location                             |
|--------------------+------------------------------+--------+--------------------------------------|
| Sprint Plan        | 12-hour development timeline | Active | [[file:docs/sprint-plan.org][docs/sprint-plan.org]]                 |
| Demo Requirements  | MVP specifications           | Active | [[file:docs/demo-requirements.org][docs/demo-requirements.org]]           |
| Integration Tests  | Testing strategy             | Active | [[file:docs/integration-test-plan.org][docs/integration-test-plan.org]]       |
| Agent Coordination | Multi-agent management       | Active | [[file:docs/agent-coordinator.org][docs/agent-coordinator.org]]           |
| Project Tracking   | Timeline and milestones      | Active | [[file:docs/tracking.org][docs/tracking.org]]                    |

** Visual & Reference

| Document              | Purpose                         | Location                    |
|-----------------------+---------------------------------+-----------------------------|
| Architecture Diagrams | Visual system representations   | [[file:docs/diagrams.org][docs/diagrams.org]]           |
| Experiments           | Isolated testing framework      | [[file:experiments/README.org][experiments/README.org]]      |
| Roadmap v2.0          | Future development plans        | [[file:docs/roadmap/V2.0-ROADMAP.org][docs/roadmap/V2.0-ROADMAP.org]] |
| Agent Discovery       | The Great Agent Discovery story | [[file:docs/status/AGENT-WORK-DISCOVERY.org][docs/status/AGENT-WORK-DISCOVERY.org]] |

* Quick Overview

** What It Does

ChangeFlow provides:
- Automated risk assessment for changes
- Intelligent approval routing
- Calendar-aware scheduling
- Compliance audit trails
- Integration with GitHub, Slack, etc.

** Core Concepts

*** Change Types (ITIL 4)

| Type      | Risk Threshold | Approval  | Use Case        |
|-----------+----------------+-----------+-----------------|
| Standard  | < 30           | Automatic | Routine updates |
| Normal    | 30-70          | Required  | Most changes    |
| Emergency | > 70           | Expedited | Critical fixes  |

*** Risk Factors

| Factor                  | Weight | Description                           |
|-------------------------+--------+---------------------------------------|
| Production impact       |     30 | Changes affecting production systems  |
| Data modifications      |     25 | Database schema or data changes      |
| Security implications   |     20 | Authentication, authorization changes |
| Multi-system changes    |     15 | Cross-system dependencies             |
| Historical success rate |     10 | Past performance of similar changes  |

* Development Setup

** Prerequisites
- GNU Guile 3.0+
- Node.js 18+
- Git
- Make

** Quick Start
#+BEGIN_SRC bash
# Clone and setup
git clone https://github.com/dsp-dr/guile-changeflow.git
cd guile-changeflow

# Environment setup (automatic with direnv)
cp .env.example .env
direnv allow

# Run tests
make test

# Start local MCP server
make mcp-server

# Deploy to Cloudflare
make deploy
#+END_SRC

* Key Components

** MCP Server
- Port: 8427 (local)
- Protocol: JSON-RPC 2.0
- Tools: 8 ITIL-compliant operations

** Risk Engine
- Real-time assessment
- Configurable factors
- Freeze period enforcement
- Dependency analysis

** State Machine
#+BEGIN_SRC
submitted → assessing → approved → implementing → completed
                     ↘ rejected     ↓            ↗
                     ↘ needs-info   → failed ───
                     ↘ cancelled
#+END_SRC

** Database
- SQLite with WAL mode
- Full audit trails
- 14 ITIL-compliant tables
- Automatic triggers

* Testing

** Test Coverage Areas
- Unit tests: Models and state machine
- Integration tests: MCP protocol
- System tests: End-to-end workflows
- Performance tests: Bulk operations

** Running Tests
#+BEGIN_SRC bash
# All tests
make test

# Specific test suites
guile test/test-core-models.scm
node test/mcp-comprehensive-test.js
./scripts/test-endpoints.sh
#+END_SRC

* Deployment

** Environments
| Environment | URL                      | Purpose            |
|-------------+--------------------------+--------------------|
| Production  | https://api.changeflow.us | Live system        |
| Local       | http://localhost:8427    | Development        |

** CI/CD Pipeline
- GitHub Actions for testing
- Automatic deployment on main branch
- Release tagging and versioning

* Contributing

See [[file:CONTRIBUTING.org][CONTRIBUTING.org]] for:
- Code style guidelines
- Commit message format
- Pull request process
- Testing requirements

* License

MIT License - See [[file:LICENSE][LICENSE]] for details