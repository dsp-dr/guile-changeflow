(define-module (mcp server)
  #:use-module (web server)
  #:use-module (web server http)
  #:use-module (web request)
  #:use-module (web response)
  #:use-module (web uri)
  #:use-module (json)
  #:use-module (mcp discovery)
  #:use-module (mcp handlers)
  #:export (start-mcp-server))

(define (handler request body)
  (let ((path (uri-path (request-uri request)))
        (method (request-method request)))
    (cond
      ((and (string=? path "/.well-known/mcp")
            (eq? method 'GET))
       (discovery-handler request))
      ((and (string=? path "/tools")
            (eq? method 'GET))
       (tools-list-handler request))
      ((and (string-prefix? "/tools/" path)
            (string-suffix? "/invoke" path)
            (eq? method 'POST))
       (tool-invoke-handler request body))
      (else
       (not-found-handler)))))

(define (not-found-handler)
  (values '((content-type . (application/json)))
          (scm->json-string '((error . "Not found")
                             (status . 404)))
          #:code 404))

(define (start-mcp-server)
  (display "Starting MCP server on port 8081...\n")
  (run-server handler 'http '(#:port 8081 #:addr "0.0.0.0")))